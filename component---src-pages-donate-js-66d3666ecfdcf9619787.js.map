{"version":3,"sources":["webpack:///./src/assets/ColorfacesWithMargin.svg","webpack:///./src/components/Row.js","webpack:///./src/data/donate.js","webpack:///./src/pages/donate.js","webpack:///./src/components/SubscribeFooter.js","webpack:///./src/components/BottomPart.js","webpack:///./src/components/TopPart.js","webpack:///./src/components/Section.js"],"names":["module","exports","Row","children","paddingTop","className","style","marginLeft","marginRight","paddingLeft","MIN_SECTION_PADDING","paddingRight","VERTICAL_PADDING","maxWidth","CONTENT_MAX_WIDTH","flex","display","ethereumData","DataWithNewlines","data","split","map","line","DonateInfo","title","flexDirection","alignSelf","fontFamily","fontSize","marginBottom","Object","keys","key","margin","wordBreak","paddingBottom","DonateIllustration","background","backgroundImage","ColorFacesIllustration","backgroundRepeat","width","height","position","Donate","TopPart","icon","iconStyle","marginTop","pageTitle","subTitle","BottomPart","SubscribeBox","SubscribeInput","id","inputStyle","borderColor","Colors","NICHE_PINK","backgroundColor","BACKGROUND_COLOR","borderWidth","borderStyle","borderBottomLeftRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","minWidth","padding","calcVerticalSize","color","buttonStyle","SUBSCRIBE_FOOTER_BACKGROUND_COLOR","borderRadius","cursor","justifyContent","alignItems","label","LogoWithLink","logo","link","text","src","DesktopBR","useMediaQuery","SubscribeFooter","fontWeight","VERTICAL_HALF_PADDING","TwitterWhiteLogo","GithubWhiteLogo","ruler","Ruler","Footer","TitleContainer","Title","SubTitle","textColor","titleStyle","site","felfeleImage","siteMetadata","imageSrc","childImageSharp","sizes","pageTitleWithMeta","H3","P","SectionBase","Section","body","SectionSeparator","minHeight","maxHeight","LinkWrapper","SectionWithImage","image","fluid","undefined","SectionWithImageAndLink","border","SectionWithMultipleButtons","buttons","button"],"mappings":"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","file":"component---src-pages-donate-js-66d3666ecfdcf9619787.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/ColorfacesWithMargin-b120945703ff8de835f9f00e7c9eafae.svg\";","import React from 'react';\n\nimport {\n    CONTENT_MAX_WIDTH,\n    VERTICAL_PADDING,\n    MIN_SECTION_PADDING,\n} from '../data/style';\n\nexport const Row = ({children, paddingTop}) => (\n    <div\n        className='grid'\n        style={{\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            paddingLeft: MIN_SECTION_PADDING,\n            paddingRight: MIN_SECTION_PADDING,\n            paddingTop: paddingTop || VERTICAL_PADDING,\n            maxWidth: CONTENT_MAX_WIDTH,\n            flex: 1,\n            display: 'flex',\n        }}\n    >{children}\n    </div>\n)\n","export const ethereumData = {\n    'Ethereum address': '0x397B48513a942d5303F3bE0fc6c63d86BAFA9c9D',\n};\n\nexport const bankingData = {\n    'SWIFT/BIC': 'TRWIBEB1XXX',\n    'IBAN': 'BE53 9670 3205 7553',\n    'Account Holder': 'Sihtasutus Felfele',\n    'Bank Address': `TransferWise Europe SA\nSquare de Mee√ªs 38 bte 40\nBrussels 1000\nBelgium`,\n};\n","import React, { Fragment } from 'react';\n\nimport { TopPart } from '../components/TopPart';\nimport { BottomPart } from '../components/BottomPart';\nimport { Row } from '../components/Row';\nimport { SectionSeparator } from '../components/Section';\n\nimport { bankingData, ethereumData } from '../data/donate';\nimport { VERTICAL_PADDING } from '../data/style'\nimport ColorFacesIllustration from '../assets/ColorfacesWithMargin.svg'\n\nconst DataWithNewlines = ({data}) => <Fragment>\n    {\n        data\n        .split('\\n')\n        .map(line => <Fragment>{line}<br/></Fragment>)\n    }\n</Fragment>\n\nconst DonateInfo = ({title, data}) => (\n    <div\n        style={{\n            flexDirection: 'column',\n            flex: 1,\n            alignSelf: 'stretch',\n        }}\n    >\n        <h3 style={{\n            fontFamily: 'Jost',\n            fontSize: 21,\n            marginBottom: 0,\n        }}>\n            {title}\n        </h3>\n        <br />\n        {Object.keys(data).map(key => {\n            if (data[key]) {\n                return (\n                    <p\n                        key={key}\n                        style={{\n                            fontSize: 14,\n                            margin: 0,\n                            wordBreak: 'break-word',\n                            paddingBottom: 10,\n                        }}\n                    >\n                        <b>{key}: </b>\n                        <br/>\n                        <DataWithNewlines data={data[key]} />\n                    </p>\n                );\n            }\n        })}\n    </div>\n)\n\nconst DonateIllustration = ({}) => (\n    <div\n        className='donate-image'\n        style={{\n            background: 'white',\n            backgroundImage: `url(${ColorFacesIllustration})`,\n            backgroundRepeat: 'repeat-x',\n            width: '100vw',\n            height: 251,\n            position: 'relative',\n        }}\n        title='Illustration by Ailadi ‚Äî ailadi.com'\n    >\n    </div>\n)\n\nexport const Donate = ({data}) => (\n    <Fragment>\n        <TopPart\n            icon={<DonateIllustration />}\n            iconStyle={{\n                marginTop: VERTICAL_PADDING,\n            }}\n            pageTitle='Donate'\n            title='MAKE A DONATION'\n            subTitle='We‚Äôve been lucky enough to get this far with the help of friends, and by investing our own resources. Boost your karma.'\n        />\n        <BottomPart>\n            <Row>\n                <DonateInfo\n                    title='ETHEREUM TRANSACTION'\n                    data={ethereumData}\n                />\n            </Row>\n        </BottomPart>\n    </Fragment>\n)\n\nexport default Donate;\n","import React, { Fragment, useState } from 'react'\nimport { useMediaQuery } from 'react-responsive'\nimport {\n    Colors,\n    MIN_SECTION_PADDING,\n    CONTENT_MAX_WIDTH,\n    VERTICAL_HALF_PADDING,\n    VERTICAL_PADDING,\n} from '../data/style'\n\nimport { calcVerticalSize } from '../utils/calc'\n\nimport TwitterWhiteLogo from '../assets/twitter_white.svg'\nimport GithubWhiteLogo from '../assets/github_white.svg'\nimport { UniversalLink } from './Button'\nimport { SubscribeInput } from './SubscribeInput'\n\nconst SubscribeBox = ({}) => (\n    <SubscribeInput\n        id='subscribe-box-input'\n        style={{\n            paddingTop: 20,\n            display: 'flex',\n            flexDirection: 'row',\n            margin: 0,\n        }}\n        inputStyle={{\n            borderColor: Colors.NICHE_PINK,\n            backgroundColor: Colors.BACKGROUND_COLOR,\n            borderWidth: 0,\n            borderStyle: 'solid',\n            borderBottomLeftRadius: 0,\n            borderTopLeftRadius: 0,\n            borderTopRightRadius: 0,\n            borderBottomRightRadius: 0,\n            height: 30,\n            maxWidth: '80vw',\n            minWidth: 160,\n            padding: 0,\n            margin: 0,\n            paddingLeft: calcVerticalSize(10),\n            fontFamily: 'Nunito Sans',\n            fontSize: 14,\n            color: '#212121',\n        }}\n        buttonStyle={{\n            maxWidth: '10vw',\n            minWidth: 100,\n            height: 30,\n            fontFamily: 'Jost',\n            fontSize: 10,\n            backgroundColor: Colors.SUBSCRIBE_FOOTER_BACKGROUND_COLOR,\n            color: 'white',\n            borderColor: 'white',\n            borderWidth: 1,\n            borderStyle: 'solid',\n            borderRadius: 0,\n            cursor: 'pointer',\n            flex: 0.3,\n            padding: 0,\n            margin: 0,\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginLeft: 10,\n        }}\n        label='SUBSCRIBE'\n    />\n)\n\nconst LogoWithLink = ({logo, link, text, style}) => (\n    <div\n        style={{\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'inherit',\n            height: 24,\n            ...style,\n        }}\n    >\n        <img src={logo} />\n        <UniversalLink\n            link={link}\n            style={{\n                paddingLeft: 7,\n                fontFamily: 'Jost',\n                fontSize: 14,\n                color: 'white',\n            }}\n        >{text}</UniversalLink>\n    </div>\n)\n\nconst DesktopBR = ({}) => {\n    const isMobile = useMediaQuery({ maxWidth: 767 })\n    return isMobile\n        ? <Fragment>&nbsp;</Fragment>\n        : <br/>\n}\n\nexport const SubscribeFooter = ({}) => (\n    <div\n        style={{\n            backgroundColor: Colors.SUBSCRIBE_FOOTER_BACKGROUND_COLOR,\n            paddingBottom: VERTICAL_PADDING,\n        }}\n    >\n        <footer\n            className='footer'\n            style={{\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                paddingLeft: MIN_SECTION_PADDING,\n                paddingRight: MIN_SECTION_PADDING,\n                maxWidth: CONTENT_MAX_WIDTH,\n                display: 'flex',\n                justifyContent: 'space-between',\n            }}\n        >\n            <div\n                style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    justifyContent: 'flex-end',\n                }}\n            >\n                <p\n                    style={{\n                        fontFamily: 'Jost',\n                        fontWeight: 500,\n                        fontSize: 12,\n                        color: 'white',\n                        paddingTop: VERTICAL_HALF_PADDING,\n                        margin: 0,\n                    }}\n                >NEWS &amp; EARLY ACCESS</p>\n                <SubscribeBox />\n                <p\n                    style={{\n                        fontFamily: 'Nunito Sans',\n                        fontSize: 14,\n                        color: '#BBBBBB',\n                        paddingTop: 10,\n                        margin: 0,\n                    }}\n                >\n                    Get important announcements and early access to our apps.\n                    <DesktopBR/>\n                    We will never spam or share your email with anyone else.\n\n                </p>\n            </div>\n\n            <div\n                className='subscribe-footer'\n                style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    justifyContent: 'space-between',\n                }}\n            >\n                <div\n                    className='grid'\n                    style={{\n                        display: 'flex',\n                        paddingTop: calcVerticalSize(80),\n                        alignItems: 'flex-start',\n                    }}\n                >\n                    <LogoWithLink\n                        logo={TwitterWhiteLogo}\n                        link='https://twitter.com/FelfeleOrg'\n                        text='@FelfeleOrg'\n                    />\n                    <div\n                        style={{\n                            width: calcVerticalSize(40),\n                            height: calcVerticalSize(40),\n                        }}\n                    ></div>\n                    <LogoWithLink\n                        logo={GithubWhiteLogo}\n                        link='https://github.com/felfele'\n                        text='github.com/felfele'\n                    />\n                </div>\n                <div\n                    style={{\n                        paddingTop: 34,\n                    }}\n                >\n                    <p\n                        style={{\n                            fontFamily: 'Nunito Sans',\n                            fontSize: 14,\n                            color: '#BBBBBB',\n                            margin: 0,\n                        }}\n                    >¬© 2020 Felfele Foundation\n                    </p>\n                </div>\n            </div>\n        </footer>\n    </div>\n)\n","import React, { Fragment } from 'react';\nimport { Colors } from '../data/style';\nimport { Ruler } from './Ruler';\nimport Footer from './Footer';\nimport { SubscribeFooter } from './SubscribeFooter';\n\nexport const BottomPart = ({ children, ruler = true }) => (\n    <Fragment>\n        <div style={{\n            backgroundColor: Colors.BACKGROUND_COLOR,\n        }}>\n            {children}\n            {ruler && <Ruler/>}\n\n            <Footer/>\n        </div>\n        <SubscribeFooter/>\n    </Fragment>\n)\n","import React, { Fragment } from 'react';\n\nimport '../styles/styles.css';\nimport '../styles/fonts.css';\n\nimport 'typeface-karla'\n\nimport Navbar from './Navbar';\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { VERTICAL_PADDING, CONTENT_MAX_WIDTH, Colors } from '../data/style'\nimport { HelmetWithMetadata } from './HelmetWithMetadata';\n\n\nconst TitleContainer = ({ children, style }) => (\n    <div\n        style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            maxWidth: CONTENT_MAX_WIDTH,\n            width: '87.5%',\n            ...style,\n        }}\n    >{children}\n    </div>\n)\n\nconst Title = ({ title, style }) => (\n    <Fragment>\n    {\n        title &&\n            <TitleContainer style={style} >\n                <h1\n                    style={{\n                        color: 'black',\n                        fontFamily: 'Jost',\n                        marginTop: 0,\n                        marginBottom: 0,\n                        paddingTop: VERTICAL_PADDING,\n                        fontWeight: 700,\n                        fontSize: 'calc(1.2rem + 2.4vmin)',\n                    }}\n                >\n                    {title}\n                </h1>\n            </TitleContainer>\n    }\n    </Fragment>\n)\n\nconst SubTitle = ({ subTitle, style }) => (\n    <Fragment>\n    {\n        subTitle &&\n            <TitleContainer style={style} >\n                <h2\n                    style={{\n                        paddingTop: VERTICAL_PADDING,\n                        color: 'black',\n                        fontFamily: 'Jost',\n                        fontWeight: 500,\n                        fontSize: 'calc(1.1rem + 1.7vmin)',\n                        marginBottom: 0,\n                        marginTop: 0,\n                    }}\n                >\n                    {subTitle}\n                </h2>\n            </TitleContainer>\n    }\n    </Fragment>\n)\n\nexport const TopPart = ({\n    icon,\n    iconStyle,\n    pageTitle,\n    title,\n    subTitle,\n    style,\n    textColor,\n    titleStyle,\n}) => {\n    const {site, felfeleImage} = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                    description\n                    siteUrl\n                }\n            }\n            felfeleImage: file(\n                relativePath: { eq: \"felfele-illustration.png\" },\n                sourceInstanceName: { eq: \"images\" }\n                ) {\n                childImageSharp {\n                    sizes(maxWidth: 1000) {\n                        src\n                    }\n                }\n            }\n        }\n    `)\n    const { siteMetadata } = site\n    const imageSrc = felfeleImage.childImageSharp.sizes.src\n    const pageTitleWithMeta = pageTitle != null\n        ? pageTitle + ' | ' + siteMetadata.title\n        : siteMetadata.title\n    return (\n        <Fragment>\n            <HelmetWithMetadata\n                pageTitle={pageTitleWithMeta}\n                siteMetadata={siteMetadata}\n                imageSrc={imageSrc}\n            />\n\n            <div\n                style={{\n                    width: '100%',\n                    backgroundColor: 'white',\n                    paddingBottom: VERTICAL_PADDING,\n                    ...style,\n                }}\n            >\n                <Navbar textColor={textColor} />\n                <Title title={title} style={titleStyle} />\n                {\n                    icon &&\n                        <div style={{\n                            flex: 1,\n                            display: 'flex',\n                            flexDirection: 'row',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            marginTop: VERTICAL_PADDING,\n                            ...iconStyle,\n                        }}>\n                            <div>\n                                {icon}\n                            </div>\n                        </div>\n                }\n                <SubTitle subTitle={subTitle} style={titleStyle} />\n            </div>\n        </Fragment>\n    )\n}\n","import React, { Fragment } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport Image from 'gatsby-image';\n\nimport { Button, UniversalLink } from './Button';\nimport { WIDTH_THRESHOLD, CONTENT_MAX_WIDTH } from '../data/style';\n\nconst H3 = ({ children, style }) => (\n    <h3 style={{\n        fontSize: 21,\n        fontFamily: 'Jost',\n        marginTop: 0,\n        marginBottom: 5,\n        ...style,\n    }}>{children}</h3>\n)\n\nconst P = ({ children, style }) => (\n    <p style={{\n        marginTop: 0,\n        marginBottom: 0,\n        ...style,\n    }}>{children}</p>\n)\n\nconst SectionBase = ({children, style, className}) => (\n    <section\n        className={className}\n        style={{\n            flex: 1,\n            display: 'flex',\n            flexDirection: 'column',\n            // maxWidth: '80vw',\n            ...style,\n        }}>{children}\n    </section>\n)\n\nexport const Section = ({ title, body }) => (\n    <SectionBase>\n        <H3>{title}</H3>\n        <P>{body}</P>\n    </SectionBase>\n)\n\nexport const SectionSeparator = () => <div style={{\n    minWidth: 40,\n    maxWidth: 40,\n    minHeight: 40,\n    maxHeight: 40,\n}}></div>\n\nconst LinkWrapper = ({link, children}) => (\n    <Fragment>\n        { link\n            ? <UniversalLink link={link}>{children}</UniversalLink>\n            : children\n        }\n    </Fragment>\n)\n\nconst SectionWithImage = ({title, text, image, link, children}) => {\n    const maxWidth = (CONTENT_MAX_WIDTH - 40) / 2\n    return (\n        <SectionBase\n            style={{\n                alignItems: 'flex-start',\n                maxWidth,\n            }}\n        >\n            {image &&\n                <LinkWrapper link={link}>\n                    <Image\n                        fluid={image}\n                        className='section-image'\n                        style={{\n                            maxWidth,\n                            height: 'auto',\n                            marginBottom: 15,\n                        }}\n                    />\n                </LinkWrapper>\n            }\n            <div\n                className={image ? 'layout' : undefined}\n                style={{\n                    paddingBottom: 20,\n                }}\n            >\n                <H3>{title}</H3>\n                <P>{text}</P>\n            </div>\n            <div\n                className={image ? 'grid layout' : undefined}\n                style={{\n                    display: 'flex',\n                    alignItems: 'flex-start',\n                }}\n            >\n            {children}\n            </div>\n        </SectionBase>\n    )\n}\n\nexport const SectionWithImageAndLink = ({ title, text, image, link, label }) => {\n    return (\n        <SectionWithImage title={title} text={text} image={image} link={link}>\n            <Button link={link} label={label} border={true} />\n        </SectionWithImage>\n    )\n}\n\nexport const SectionWithMultipleButtons = ({ title, text, image, link, buttons }) => {\n    return (\n        <SectionWithImage title={title} text={text} image={image} link={link} >\n            {buttons.map(button =>\n                <Button\n                    link={button.link}\n                    label={button.label}\n                    border={true}\n                    style={{\n                        marginRight: 10,\n                        marginBottom: 10,\n                    }}\n                />)}\n        </SectionWithImage>\n    )\n}\n"],"sourceRoot":""}