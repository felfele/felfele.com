{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","get","siteDescription","excerpt","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","location","title","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","lang","meta","name","content","frontmatter","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","style","display","alignItems","flexDirection","date","maxWidth","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","path","rel","React","Component","query"],"mappings":"+NAOMA,4FACFC,kBACI,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYC,IAAIL,KAAKC,MAAO,gCAC5BK,EAAkBP,EAAKQ,QAHxBC,EAIsBR,KAAKC,MAAMQ,YAA9BC,EAJHF,EAIGE,SAAUC,EAJbH,EAIaG,KAElB,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUhB,KAAKC,MAAMe,SAAUC,MAAOb,GAC1CQ,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CACIM,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASjB,IACvCW,MAAUlB,EAAKyB,YAAYP,MAAtB,MAAiCb,IAE1CQ,EAAAC,EAAAC,cAACW,EAAA,KAAD,CAAMC,GAAG,SAAT,UACAd,EAAAC,EAAAC,cAAA,OACIa,MAAO,CACHC,QAAS,OACTC,WAAY,SACZC,cAAe,WAGvBlB,EAAAC,EAAAC,cAAA,UAAKf,EAAKyB,YAAYP,OACtBL,EAAAC,EAAAC,cAAA,SACKf,EAAKyB,YAAYO,MAEtBnB,EAAAC,EAAAC,cAAA,OACIa,MAAO,CACHC,QAAS,OACTE,cAAe,SACfD,WAAY,SACZG,SAAU,KAEdC,wBAAyB,CAAEC,OAAQnC,EAAKoC,QAE5CvB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MACIa,MAAO,CACHC,QAAS,OACTQ,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGb3B,EAAAC,EAAAC,cAAA,UACKJ,GACGE,EAAAC,EAAAC,cAACW,EAAA,KAAD,CAAMC,GAAIhB,EAASc,YAAYgB,KAAMC,IAAI,QAAzC,KACO/B,EAASc,YAAYP,QAIpCL,EAAAC,EAAAC,cAAA,UACKH,GACGC,EAAAC,EAAAC,cAACW,EAAA,KAAD,CAAMC,GAAIf,EAAKa,YAAYgB,KAAMC,IAAI,QAChC9B,EAAKa,YAAYP,MADtB,cAtDGyB,IAAMC,WAkEtB9C,YAER,IAAM+C,EAAK","file":"component---src-templates-blog-post-js-84c56e6fe97aa8181b62.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { Link, graphql } from 'gatsby';\nimport get from 'lodash/get';\n\nimport Layout from '../components/Layout';\n\nclass BlogPostTemplate extends React.Component {\n    render() {\n        const post = this.props.data.markdownRemark;\n        const siteTitle = get(this.props, 'data.site.siteMetadata.title');\n        const siteDescription = post.excerpt;\n        const { previous, next } = this.props.pageContext;\n\n        return (\n            <Layout location={this.props.location} title={siteTitle}>\n                <Helmet\n                    htmlAttributes={{ lang: 'en' }}\n                    meta={[{ name: 'description', content: siteDescription }]}\n                    title={`${post.frontmatter.title} | ${siteTitle}`}\n                />\n                <Link to=\"/blog\">&larr; Blog</Link>\n                <div\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        flexDirection: 'column',\n                    }}\n                >\n                    <h1>{post.frontmatter.title}</h1>\n                    <p>\n                        {post.frontmatter.date}\n                    </p>\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            maxWidth: 800,\n                        }}\n                        dangerouslySetInnerHTML={{ __html: post.html }}\n                    />\n                    <hr/>\n                    <ul\n                        style={{\n                            display: 'flex',\n                            flexWrap: 'wrap',\n                            justifyContent: 'space-between',\n                            listStyle: 'none',\n                            padding: 0,\n                        }}\n                    >\n                        <li>\n                            {previous && (\n                                <Link to={previous.frontmatter.path} rel=\"prev\">\n                                    ← {previous.frontmatter.title}\n                                </Link>\n                            )}\n                        </li>\n                        <li>\n                            {next && (\n                                <Link to={next.frontmatter.path} rel=\"next\">\n                                    {next.frontmatter.title} →\n                                </Link>\n                            )}\n                        </li>\n                    </ul>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default BlogPostTemplate;\n\nexport const query = graphql`\n    query BlogPostBySlug($slug: String!) {\n        site {\n            siteMetadata {\n                title\n                author\n            }\n        }\n        markdownRemark(frontmatter: { path: { eq: $slug } }) {\n            id\n            excerpt\n            html\n            frontmatter {\n                title\n                date(formatString: \"MMMM DD, YYYY\")\n                path\n            }\n            fields {\n                slug\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}