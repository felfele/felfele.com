{"version":3,"sources":["webpack:///./src/pages/blog/index.js"],"names":["BlogIndex","props","updateWindowDimensions","setState","width","window","innerWidth","height","innerHeight","state","componentDidMount","this","addEventListener","componentWillUnmount","removeEventListener","render","siteTitle","get","siteDescription","posts","location","title","htmlAttributes","lang","meta","name","content","style","display","alignItems","flexDirection","fontSize","fontFamily","marginBottom","map","node","frontmatter","path","maxWidth","key","boxShadow","to","featuredImage","paddingTop","paddingBottom","fluid","childImageSharp","date","dangerouslySetInnerHTML","__html","excerpt","React","Component","query"],"mappings":"6PAQMA,E,oBACF,WAAYC,GAAQ,IAAD,SACf,cAAMA,IAAN,MAeJC,uBAAyB,WACrB,EAAKC,SAAS,CAAEC,MAAOC,OAAOC,WAAYC,OAAQF,OAAOG,eAfzD,EAAKC,MAAQ,CACTL,MAAO,GAHI,E,kHAOnBM,kBAAA,WACIC,KAAKT,yBACLG,OAAOO,iBAAiB,SAAUD,KAAKT,yB,EAG3CW,qBAAA,WACIR,OAAOS,oBAAoB,SAAUH,KAAKT,yB,EAO9Ca,OAAA,WAAU,IAAD,OACCC,EAAYC,IAAIN,KAAM,sCACtBO,EAAkBD,IACpBN,KACA,4CAEEQ,EAAQF,IAAIN,KAAM,sCAExB,OACI,kBAAC,IAAD,CAAQS,SAAUT,KAAKV,MAAMmB,SAAUC,MAAOL,GAC1C,kBAAC,IAAD,CACIM,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASR,IACvCG,MAAK,UAAYL,IAErB,yBACIW,MAAO,CACHC,QAAS,OACTC,WAAY,SACZC,cAAe,WAGnB,wBACIH,MAAO,CACHI,SAAU,GACVC,WAAY,OACZC,aAAc,IAJtB,QASCd,EAAMe,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJd,EACFJ,IAAIkB,EAAM,sBAAwBA,EAAKC,YAAYC,KACvD,OACI,yBACIV,MAAO,CACHC,QAAS,OACTC,WAAY,SACZC,cAAe,SACfQ,SAAU,KAEdC,IAAKJ,EAAKC,YAAYC,MAEtB,wBACIV,MAAO,CACHK,WAAY,OACZD,SAAU,GACVE,aAAc,IAGlB,kBAAC,OAAD,CACIN,MAAO,CAAEa,UAAW,QACpBC,GAAIN,EAAKC,YAAYC,MAEpBhB,IAG0B,MAAlCc,EAAKC,YAAYM,eAClB,yBAAKf,MAAO,CACRW,SAAU,IACVlC,MAAO,EAAKK,MAAML,MAAQ,IAAM,IAAM,EAAKK,MAAML,MAAQ,GACzDuC,WAAY,GACZC,cAAe,KAEf,kBAAC,IAAD,CAAKC,MAAOV,EAAKC,YAAYM,cAAcI,gBAAgBD,SAG/D,+BAAQV,EAAKC,YAAYW,MACzB,uBACIC,wBAAyB,CACrBC,OAAQd,EAAKe,kB,GA5F7BC,IAAMC,WAwGfpD,YAER,IAAMqD,EAAK","file":"component---src-pages-blog-index-js-9b963ca32cd214827e92.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport get from 'lodash/get';\nimport Helmet from 'react-helmet';\nimport Img from 'gatsby-image';\n\nimport Layout from '../../components/Layout';\n\nclass BlogIndex extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: 0\n        };\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    render() {\n        const siteTitle = get(this, 'props.data.site.siteMetadata.title');\n        const siteDescription = get(\n            this,\n            'props.data.site.siteMetadata.description'\n        );\n        const posts = get(this, 'props.data.allMarkdownRemark.edges');\n\n        return (\n            <Layout location={this.props.location} title={siteTitle}>\n                <Helmet\n                    htmlAttributes={{ lang: 'en' }}\n                    meta={[{ name: 'description', content: siteDescription }]}\n                    title={`Blog | ${siteTitle}`}\n                />\n                <div\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        flexDirection: 'column',\n                    }}\n                >\n                    <h1\n                        style={{\n                            fontSize: 76,\n                            fontFamily: 'Jost',\n                            marginBottom: 0,\n                        }}\n                    >\n                        Blog\n                    </h1>\n                    {posts.map(({ node }) => {\n                        const title =\n                            get(node, 'frontmatter.title') || node.frontmatter.path;\n                        return (\n                            <div\n                                style={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    flexDirection: 'column',\n                                    maxWidth: 800,\n                                }}\n                                key={node.frontmatter.path}\n                            >\n                                <h3\n                                    style={{\n                                        fontFamily: 'Jost',\n                                        fontSize: 27,\n                                        marginBottom: 0,\n                                    }}\n                                >\n                                    <Link\n                                        style={{ boxShadow: 'none' }}\n                                        to={node.frontmatter.path}\n                                    >\n                                        {title}\n                                    </Link>\n                                </h3>\n                                {node.frontmatter.featuredImage != null &&\n                                <div style={{\n                                    maxWidth: 500,\n                                    width: this.state.width > 520 ? 500 : this.state.width - 20,\n                                    paddingTop: 20,\n                                    paddingBottom: 20,\n                                }}>\n                                    <Img fluid={node.frontmatter.featuredImage.childImageSharp.fluid}/>\n                                </div>\n                                }\n                                <small>{node.frontmatter.date}</small>\n                                <p\n                                    dangerouslySetInnerHTML={{\n                                        __html: node.excerpt,\n                                    }}\n                                />\n                            </div>\n                        );\n                    })}\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default BlogIndex;\n\nexport const query = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n                description\n            }\n        }\n        allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC }\n            filter: { frontmatter: { type: { eq: \"post\" } } }\n        ) {\n            edges {\n                node {\n                    excerpt\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        title\n                        path\n                        type\n                        featuredImage {\n                            childImageSharp {\n                                fluid(maxWidth: 500) {\n                                    ...GatsbyImageSharpFluid\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}