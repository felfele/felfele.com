{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","props","updateWindowDimensions","setState","width","window","innerWidth","height","innerHeight","state","componentDidMount","this","addEventListener","componentWillUnmount","removeEventListener","render","post","data","markdownRemark","siteTitle","get","siteDescription","excerpt","pageContext","previous","next","location","title","htmlAttributes","lang","meta","name","content","frontmatter","style","display","alignItems","flexDirection","flexBasis","to","date","justifyItems","maxWidth","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","path","rel","React","Component","query"],"mappings":"sQAOMA,E,qHACF,WAAYC,GAAQ,IAAD,SACf,cAAMA,IAAN,MAeJC,uBAAyB,WACrB,EAAKC,SAAS,CAAEC,MAAOC,OAAOC,WAAYC,OAAQF,OAAOG,eAfzD,EAAKC,MAAQ,CACTL,MAAO,GAHI,E,2BAOnBM,kBAAA,WACIC,KAAKT,yBACLG,OAAOO,iBAAiB,SAAUD,KAAKT,yB,EAG3CW,qBAAA,WACIR,OAAOS,oBAAoB,SAAUH,KAAKT,yB,EAO9Ca,OAAA,WACI,IAAMC,EAAOL,KAAKV,MAAMgB,KAAKC,eACvBC,EAAYC,IAAIT,KAAKV,MAAO,gCAC5BoB,EAAkBL,EAAKM,QAHxB,EAIsBX,KAAKV,MAAMsB,YAA9BC,EAJH,EAIGA,SAAUC,EAJb,EAIaA,KAElB,OACI,kBAAC,IAAD,CAAQC,SAAUf,KAAKV,MAAMyB,SAAUC,MAAOR,GAC1C,kBAAC,IAAD,CACIS,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASX,IACvCM,MAAUX,EAAKiB,YAAYN,MAAtB,MAAiCR,IAE1C,yBACIe,MAAO,CACHC,QAAS,OACTC,WAAY,SACZC,cAAe,SACfC,UAAW,SAGf,kBAAC,OAAD,CAAMC,GAAG,SAAT,kBACA,4BAAKvB,EAAKiB,YAAYN,OACtB,2BACKX,EAAKiB,YAAYO,MAEtB,yBACIN,MAAO,CACHE,WAAY,SACZK,aAAc,SACdC,SAAU,IACVtC,MAAOO,KAAKF,MAAML,MAAQ,IAE9BuC,wBAAyB,CAAEC,OAAQ5B,EAAK6B,QAE5C,6BACA,wBACIX,MAAO,CACHC,QAAS,OACTW,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGb,4BACKzB,GACG,kBAAC,OAAD,CAAMe,GAAIf,EAASS,YAAYiB,KAAMC,IAAI,QAAzC,KACO3B,EAASS,YAAYN,QAIpC,4BACKF,GACG,kBAAC,OAAD,CAAMc,GAAId,EAAKQ,YAAYiB,KAAMC,IAAI,QAChC1B,EAAKQ,YAAYN,MADtB,W,GA3EDyB,IAAMC,WAuFtBrD,YAER,IAAMsD,EAAK","file":"component---src-templates-blog-post-js-8e7fea69dba21eb03e12.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { Link, graphql } from 'gatsby';\nimport get from 'lodash/get';\n\nimport Layout from '../components/Layout';\n\nclass BlogPostTemplate extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: 0\n        };\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    render() {\n        const post = this.props.data.markdownRemark;\n        const siteTitle = get(this.props, 'data.site.siteMetadata.title');\n        const siteDescription = post.excerpt;\n        const { previous, next } = this.props.pageContext;\n\n        return (\n            <Layout location={this.props.location} title={siteTitle}>\n                <Helmet\n                    htmlAttributes={{ lang: 'en' }}\n                    meta={[{ name: 'description', content: siteDescription }]}\n                    title={`${post.frontmatter.title} | ${siteTitle}`}\n                />\n                <div\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        flexDirection: 'column',\n                        flexBasis: 'auto',\n                    }}\n                >\n                    <Link to=\"/blog\">&larr; Back to blog</Link>\n                    <h1>{post.frontmatter.title}</h1>\n                    <p>\n                        {post.frontmatter.date}\n                    </p>\n                    <div\n                        style={{\n                            alignItems: 'center',\n                            justifyItems: 'center',\n                            maxWidth: 800,\n                            width: this.state.width - 20,\n                        }}\n                        dangerouslySetInnerHTML={{ __html: post.html }}\n                    />\n                    <hr/>\n                    <ul\n                        style={{\n                            display: 'flex',\n                            flexWrap: 'wrap',\n                            justifyContent: 'space-between',\n                            listStyle: 'none',\n                            padding: 0,\n                        }}\n                    >\n                        <li>\n                            {previous && (\n                                <Link to={previous.frontmatter.path} rel=\"prev\">\n                                    ← {previous.frontmatter.title}\n                                </Link>\n                            )}\n                        </li>\n                        <li>\n                            {next && (\n                                <Link to={next.frontmatter.path} rel=\"next\">\n                                    {next.frontmatter.title} →\n                                </Link>\n                            )}\n                        </li>\n                    </ul>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default BlogPostTemplate;\n\nexport const query = graphql`\n    query BlogPostBySlug($slug: String!) {\n        site {\n            siteMetadata {\n                title\n                author\n            }\n        }\n        markdownRemark(frontmatter: { path: { eq: $slug } }) {\n            id\n            excerpt\n            html\n            frontmatter {\n                title\n                date(formatString: \"MMMM DD, YYYY\")\n                path\n            }\n            fields {\n                slug\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}