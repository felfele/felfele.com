{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","props","_this","_React$Component","call","this","updateWindowDimensions","setState","width","window","innerWidth","height","innerHeight","state","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","post","data","markdownRemark","siteTitle","get","siteDescription","excerpt","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","location","title","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","lang","meta","name","content","frontmatter","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","style","display","alignItems","flexDirection","flexBasis","date","justifyItems","maxWidth","textAlign","color","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","path","rel","React","Component","query"],"mappings":"+NAOMA,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACfA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAeJC,uBAAyB,WACrBJ,EAAKK,SAAS,CAAEC,MAAOC,OAAOC,WAAYC,OAAQF,OAAOG,eAfzDV,EAAKW,MAAQ,CACTL,MAAO,GAHIN,sCAOnBY,6BACIT,KAAKC,yBACLG,OAAOM,iBAAiB,SAAUV,KAAKC,2BAG3CU,gCACIP,OAAOQ,oBAAoB,SAAUZ,KAAKC,2BAO9CY,kBACI,IAAMC,EAAOd,KAAKJ,MAAMmB,KAAKC,eACvBC,EAAYC,IAAIlB,KAAKJ,MAAO,gCAC5BuB,EAAkBL,EAAKM,QAHxBC,EAIsBrB,KAAKJ,MAAM0B,YAA9BC,EAJHF,EAIGE,SAAUC,EAJbH,EAIaG,KAElB,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAU7B,KAAKJ,MAAMiC,SAAUC,MAAOb,GAC1CQ,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CACIM,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASjB,IACvCW,MAAUhB,EAAKuB,YAAYP,MAAtB,MAAiCb,IAE1CQ,EAAAC,EAAAC,cAACW,EAAA,KAAD,CAAMC,GAAG,SAAT,UACAd,EAAAC,EAAAC,cAAA,OACIa,MAAO,CACHC,QAAS,OACTC,WAAY,SACZC,cAAe,SACfC,UAAW,SAGfnB,EAAAC,EAAAC,cAAA,UAAKb,EAAKuB,YAAYP,OACtBL,EAAAC,EAAAC,cAAA,SACKb,EAAKuB,YAAYQ,MAEtBpB,EAAAC,EAAAC,cAAA,OACIa,MAAO,CACHE,WAAY,SACZI,aAAc,SACdC,SAAU,IACV5C,MAAOH,KAAKQ,MAAML,MAAQ,GAC1B6C,UAAW,SACXC,MAAO,WAEXC,wBAAyB,CAAEC,OAAQrC,EAAKsC,QAE5C3B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MACIa,MAAO,CACHC,QAAS,OACTY,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGb/B,EAAAC,EAAAC,cAAA,UACKJ,GACGE,EAAAC,EAAAC,cAACW,EAAA,KAAD,CAAMC,GAAIhB,EAASc,YAAYoB,KAAMC,IAAI,QAAzC,KACOnC,EAASc,YAAYP,QAIpCL,EAAAC,EAAAC,cAAA,UACKH,GACGC,EAAAC,EAAAC,cAACW,EAAA,KAAD,CAAMC,GAAIf,EAAKa,YAAYoB,KAAMC,IAAI,QAChClC,EAAKa,YAAYP,MADtB,cA7ED6B,IAAMC,WAyFtBjE,YAER,IAAMkE,EAAK","file":"component---src-templates-blog-post-js-3e8de6069be1afa6a26d.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { Link, graphql } from 'gatsby';\nimport get from 'lodash/get';\n\nimport Layout from '../components/Layout';\n\nclass BlogPostTemplate extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: 0\n        };\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    render() {\n        const post = this.props.data.markdownRemark;\n        const siteTitle = get(this.props, 'data.site.siteMetadata.title');\n        const siteDescription = post.excerpt;\n        const { previous, next } = this.props.pageContext;\n\n        return (\n            <Layout location={this.props.location} title={siteTitle}>\n                <Helmet\n                    htmlAttributes={{ lang: 'en' }}\n                    meta={[{ name: 'description', content: siteDescription }]}\n                    title={`${post.frontmatter.title} | ${siteTitle}`}\n                />\n                <Link to=\"/blog\">&larr; Blog</Link>\n                <div\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        flexDirection: 'column',\n                        flexBasis: 'auto',\n                    }}\n                >\n                    <h1>{post.frontmatter.title}</h1>\n                    <p>\n                        {post.frontmatter.date}\n                    </p>\n                    <div\n                        style={{\n                            alignItems: 'center',\n                            justifyItems: 'center',\n                            maxWidth: 800,\n                            width: this.state.width - 20,\n                            textAlign: 'center',\n                            color: '#21004F',\n                        }}\n                        dangerouslySetInnerHTML={{ __html: post.html }}\n                    />\n                    <hr/>\n                    <ul\n                        style={{\n                            display: 'flex',\n                            flexWrap: 'wrap',\n                            justifyContent: 'space-between',\n                            listStyle: 'none',\n                            padding: 0,\n                        }}\n                    >\n                        <li>\n                            {previous && (\n                                <Link to={previous.frontmatter.path} rel=\"prev\">\n                                    ← {previous.frontmatter.title}\n                                </Link>\n                            )}\n                        </li>\n                        <li>\n                            {next && (\n                                <Link to={next.frontmatter.path} rel=\"next\">\n                                    {next.frontmatter.title} →\n                                </Link>\n                            )}\n                        </li>\n                    </ul>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default BlogPostTemplate;\n\nexport const query = graphql`\n    query BlogPostBySlug($slug: String!) {\n        site {\n            siteMetadata {\n                title\n                author\n            }\n        }\n        markdownRemark(frontmatter: { path: { eq: $slug } }) {\n            id\n            excerpt\n            html\n            frontmatter {\n                title\n                date(formatString: \"MMMM DD, YYYY\")\n                path\n            }\n            fields {\n                slug\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}